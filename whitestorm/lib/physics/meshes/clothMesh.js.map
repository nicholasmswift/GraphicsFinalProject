{"version":3,"sources":["physics/meshes/clothMesh.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAEa,S,WAAA,S;;;AACX,uBAAY,QAAZ,EAAsB,QAAtB,EAA6C;AAAA,YAAb,MAAa,yDAAJ,EAAI;AAAA;;AAC3C,YAAM,aAAa,OAAO,OAA1B;AAAA,YACE,aAAa,SAAS,UADxB;;AAGA,YAAM,OAAO,WAAW,IAAX,IAAmB,OAAO,IAAvC;;AAJ2C,+GAKrC,QALqC,EAK3B,QAL2B,EAKjB,IALiB;;AAO3C,cAAK,QAAL,CAAc,IAAd,GAAqB,eAArB;;AAEA,YAAM,QAAQ,SAAS,UAAT,CAAoB,QAApB,CAA6B,KAA3C;;AAEA,YAAI,CAAC,WAAW,aAAhB,EAA+B,WAAW,aAAX,GAA2B,CAA3B;AAC/B,YAAI,CAAC,WAAW,cAAhB,EAAgC,WAAW,cAAX,GAA4B,CAA5B;;AAEhC,YAAM,QAAQ,CAAd;AACA,YAAM,QAAQ,WAAW,aAAzB;AACA,YAAM,QAAQ,CAAC,WAAW,cAAX,GAA4B,CAA7B,KAAmC,WAAW,aAAX,GAA2B,CAA9D,KAAoE,WAAW,aAAX,GAA2B,CAA/F,CAAd;AACA,YAAM,QAAQ,MAAM,MAAN,GAAe,CAAf,GAAmB,CAAjC;;AAEA,cAAK,QAAL,CAAc,OAAd,GAAwB,CACtB,MAAM,QAAQ,CAAd,CADsB,EACJ,MAAM,QAAQ,CAAR,GAAY,CAAlB,CADI,EACkB,MAAM,QAAQ,CAAR,GAAY,CAAlB,CADlB,EACwC;AAC9D,cAAM,QAAQ,CAAd,CAFsB,EAEJ,MAAM,QAAQ,CAAR,GAAY,CAAlB,CAFI,EAEkB,MAAM,QAAQ,CAAR,GAAY,CAAlB,CAFlB,EAEwC;AAC9D,cAAM,QAAQ,CAAd,CAHsB,EAGJ,MAAM,QAAQ,CAAR,GAAY,CAAlB,CAHI,EAGkB,MAAM,QAAQ,CAAR,GAAY,CAAlB,CAHlB,EAGwC;AAC9D,cAAM,QAAQ,CAAd,CAJsB,EAIJ,MAAM,QAAQ,CAAR,GAAY,CAAlB,CAJI,EAIkB,MAAM,QAAQ,CAAR,GAAY,CAAlB,CAJlB,CAAxB;;AAOA,cAAK,QAAL,CAAc,QAAd,GAAyB,CAAC,WAAW,aAAX,GAA2B,CAA5B,EAA+B,WAAW,cAAX,GAA4B,CAA3D,CAAzB;;AAEA,cAAK,QAAL,CAAc,MAAd,GAAuB;AACrB,sBAAU,WAAW,QADA;AAErB,qBAAS,WAAW,OAFC;AAGrB,sBAAU,WAAW,QAHA;AAIrB,oBAAQ,WAAW,MAJE;AAKrB,uBAAW,WAAW;AALD,SAAvB;;AAQA,cAAK,QAAL,CAAc,IAAd,GAAqB,IAArB;AApC2C;AAqC5C;;;;qCAEY,K,EAAO,M,EAAQ,I,EAAM,S,EAAgD;AAAA,gBAArC,4BAAqC,yDAAN,IAAM;;AAChF,gBAAM,KAAK,KAAK,QAAL,CAAc,EAAzB;AACA,gBAAM,KAAK,OAAO,QAAP,CAAgB,EAA3B;;AAEA,kBAAM,OAAN,CAAc,cAAd,EAA8B;AAC5B,qBAAK,EADuB;AAE5B,sBAAM,EAFsB;AAG5B,0BAH4B;AAI5B,oCAJ4B;AAK5B;AAL4B,aAA9B;AAOD","file":"clothMesh.js","sourcesContent":["import {Mesh} from '../core/mesh';\r\n\r\nexport class ClothMesh extends Mesh {\r\n  constructor(geometry, material, params = {}) {\r\n    const physParams = params.physics,\r\n      geomParams = geometry.parameters;\r\n\r\n    const mass = physParams.mass || params.mass;\r\n    super(geometry, material, mass);\r\n\r\n    this._physijs.type = 'softClothMesh';\r\n\r\n    const verts = geometry.attributes.position.array;\r\n\r\n    if (!geomParams.widthSegments) geomParams.widthSegments = 1;\r\n    if (!geomParams.heightSegments) geomParams.heightSegments = 1;\r\n\r\n    const idx00 = 0;\r\n    const idx01 = geomParams.widthSegments;\r\n    const idx10 = (geomParams.heightSegments + 1) * (geomParams.widthSegments + 1) - (geomParams.widthSegments + 1);\r\n    const idx11 = verts.length / 3 - 1;\r\n\r\n    this._physijs.corners = [\r\n      verts[idx01 * 3], verts[idx01 * 3 + 1], verts[idx01 * 3 + 2], //   ╗\r\n      verts[idx00 * 3], verts[idx00 * 3 + 1], verts[idx00 * 3 + 2], // ╔\r\n      verts[idx11 * 3], verts[idx11 * 3 + 1], verts[idx11 * 3 + 2], //       ╝ \r\n      verts[idx10 * 3], verts[idx10 * 3 + 1], verts[idx10 * 3 + 2], //     ╚\r\n    ];\r\n\r\n    this._physijs.segments = [geomParams.widthSegments + 1, geomParams.heightSegments + 1];\r\n\r\n    this._physijs.params = {\r\n      friction: physParams.friction,\r\n      damping: physParams.damping,\r\n      pressure: physParams.pressure,\r\n      margin: physParams.margin,\r\n      stiffness: physParams.stiffness\r\n    };\r\n\r\n    this._physijs.mass = mass;\r\n  }\r\n\r\n  appendAnchor(world, object, node, influence, collisionBetweenLinkedBodies = true) {\r\n    const o1 = this._physijs.id;\r\n    const o2 = object._physijs.id;\r\n\r\n    world.execute('appendAnchor', {\r\n      obj: o1,\r\n      obj2: o2,\r\n      node,\r\n      influence,\r\n      collisionBetweenLinkedBodies\r\n    });\r\n  }\r\n}\r\n"]}