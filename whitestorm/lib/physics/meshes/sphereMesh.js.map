{"version":3,"sources":["physics/meshes/sphereMesh.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;IAEa,U,WAAA,U;;;AACX,wBAAY,QAAZ,EAAsB,QAAtB,EAA6C;AAAA,YAAb,MAAa,yDAAJ,EAAI;AAAA;;AAC3C,YAAM,aAAa,OAAO,OAA1B;AACA,YAAM,OAAO,WAAW,IAAX,IAAmB,OAAO,IAAvC;;AAF2C,gHAIrC,QAJqC,EAI3B,QAJ2B,EAIjB,IAJiB;;AAM3C,YAAI,CAAC,SAAS,cAAd,EAA8B,SAAS,qBAAT;AAC9B,cAAK,QAAL,CAAc,IAAd,GAAqB,QAArB;AACA,cAAK,QAAL,CAAc,MAAd,GAAuB,SAAS,cAAT,CAAwB,MAA/C;;AAEA,cAAK,QAAL,CAAc,MAAd,GAAuB;AACrB,sBAAU,WAAW,QADA;AAErB,yBAAa,WAAW,WAFH;AAGrB,qBAAS,WAAW,OAHC;AAIrB,oBAAQ,WAAW;AAJE,SAAvB;;AAOA,cAAK,QAAL,CAAc,IAAd,GAAqB,IAArB;AAjB2C;AAkB5C","file":"sphereMesh.js","sourcesContent":["import {Mesh} from '../core/mesh';\r\n\r\nexport class SphereMesh extends Mesh {\r\n  constructor(geometry, material, params = {}) {\r\n    const physParams = params.physics;\r\n    const mass = physParams.mass || params.mass;\r\n\r\n    super(geometry, material, mass);\r\n\r\n    if (!geometry.boundingSphere) geometry.computeBoundingSphere();\r\n    this._physijs.type = 'sphere';\r\n    this._physijs.radius = geometry.boundingSphere.radius;\r\n\r\n    this._physijs.params = {\r\n      friction: physParams.friction,\r\n      restitution: physParams.restitution,\r\n      damping: physParams.damping,\r\n      margin: physParams.margin\r\n    };\r\n\r\n    this._physijs.mass = mass;\r\n  }\r\n}\r\n"]}