{"version":3,"sources":["physics/worker.js"],"names":[],"mappings":"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","file":"worker.js","sourcesContent":["import Ammo from 'whs-ammo';\n\nmodule.exports = function (self) {\n  'use strict';\n  const transferableMessage = self.webkitPostMessage || self.postMessage,\n\n    // enum\n    MESSAGE_TYPES = {\n      WORLDREPORT: 0,\n      COLLISIONREPORT: 1,\n      VEHICLEREPORT: 2,\n      CONSTRAINTREPORT: 3,\n      SOFTREPORT: 4\n    },\n\n    softBodyHelpers = new Ammo.btSoftBodyHelpers();\n\n    // temp variables\n  let _object,\n    _vector,\n    _transform,\n    _transform_pos,\n    _softbody_enabled = false,\n    last_simulation_duration = 0,\n\n    _num_objects = 0,\n    _num_rigidbody_objects = 0,\n    _num_softbody_objects = 0,\n    _num_wheels = 0,\n    _num_constraints = 0,\n    _softbody_report_size = 0,\n\n    // world variables\n    fixedTimeStep, // used when calling stepSimulation\n    last_simulation_time,\n\n    world,\n    _vec3_1,\n    _vec3_2,\n    _vec3_3,\n    _quat;\n\n    // private cache\n  const public_functions = {},\n    _objects = [],\n    _vehicles = [],\n    _constraints = [],\n    _objects_ammo = {},\n    _object_shapes = {},\n\n    // The following objects are to track objects that ammo.js doesn't clean\n    // up. All are cleaned up when they're corresponding body is destroyed.\n    // Unfortunately, it's very difficult to get at these objects from the\n    // body, so we have to track them ourselves.\n    _motion_states = {},\n    // Don't need to worry about it for cached shapes.\n    _noncached_shapes = {},\n    // A body with a compound shape always has a regular shape as well, so we\n    // have track them separately.\n    _compound_shapes = {};\n\n    // object reporting\n  let REPORT_CHUNKSIZE, // report array is increased in increments of this chunk size\n    worldreport,\n    softreport,\n    collisionreport,\n    vehiclereport,\n    constraintreport;\n\n  const WORLDREPORT_ITEMSIZE = 14, // how many float values each reported item needs\n    COLLISIONREPORT_ITEMSIZE = 5, // one float for each object id, and a Vec3 contact normal\n    VEHICLEREPORT_ITEMSIZE = 9, // vehicle id, wheel index, 3 for position, 4 for rotation\n    CONSTRAINTREPORT_ITEMSIZE = 6; // constraint id, offset object, offset, applied impulse\n\n  const ab = new ArrayBuffer(1);\n\n  transferableMessage(ab, [ab]);\n  const SUPPORT_TRANSFERABLE = (ab.byteLength === 0);\n\n  const getShapeFromCache = (cache_key) => {\n    if (_object_shapes[cache_key] !== undefined)\n      return _object_shapes[cache_key];\n\n    return null;\n  };\n\n  const setShapeCache = (cache_key, shape) => {\n    _object_shapes[cache_key] = shape;\n  };\n\n  const createShape = (description) => {\n    let shape;\n\n    _transform.setIdentity();\n    switch (description.type) {\n      case 'plane': {\n        const cache_key = `plane_${description.normal.x}_${description.normal.y}_${description.normal.z}`;\n\n        if ((shape = getShapeFromCache(cache_key)) === null) {\n          _vec3_1.setX(description.normal.x);\n          _vec3_1.setY(description.normal.y);\n          _vec3_1.setZ(description.normal.z);\n          shape = new Ammo.btStaticPlaneShape(_vec3_1, 0);\n          setShapeCache(cache_key, shape);\n        }\n\n        break;\n      }\n      case 'box': {\n        const cache_key = `box_${description.width}_${description.height}_${description.depth}`;\n\n        if ((shape = getShapeFromCache(cache_key)) === null) {\n          _vec3_1.setX(description.width / 2);\n          _vec3_1.setY(description.height / 2);\n          _vec3_1.setZ(description.depth / 2);\n          shape = new Ammo.btBoxShape(_vec3_1);\n          setShapeCache(cache_key, shape);\n        }\n\n        break;\n      }\n      case 'sphere': {\n        const cache_key = `sphere_${description.radius}`;\n\n        if ((shape = getShapeFromCache(cache_key)) === null) {\n          shape = new Ammo.btSphereShape(description.radius);\n          setShapeCache(cache_key, shape);\n        }\n\n        break;\n      }\n      case 'cylinder': {\n        const cache_key = `cylinder_${description.width}_${description.height}_${description.depth}`;\n\n        if ((shape = getShapeFromCache(cache_key)) === null) {\n          _vec3_1.setX(description.width / 2);\n          _vec3_1.setY(description.height / 2);\n          _vec3_1.setZ(description.depth / 2);\n          shape = new Ammo.btCylinderShape(_vec3_1);\n          setShapeCache(cache_key, shape);\n        }\n\n        break;\n      }\n      case 'capsule': {\n        const cache_key = `capsule_${description.radius}_${description.height}`;\n\n        if ((shape = getShapeFromCache(cache_key)) === null) {\n          // In Bullet, capsule height excludes the end spheres\n          shape = new Ammo.btCapsuleShape(description.radius, description.height - 2 * description.radius);\n          setShapeCache(cache_key, shape);\n        }\n\n        break;\n      }\n      case 'cone': {\n        const cache_key = `cone_${description.radius}_${description.height}`;\n\n        if ((shape = getShapeFromCache(cache_key)) === null) {\n          shape = new Ammo.btConeShape(description.radius, description.height);\n          setShapeCache(cache_key, shape);\n        }\n\n        break;\n      }\n      case 'concave': {\n        const triangle_mesh = new Ammo.btTriangleMesh();\n        if (!description.data.length) return false;\n        const data = description.data;\n\n        for (let i = 0; i < data.length / 9; i++) {\n          _vec3_1.setX(data[i * 9]);\n          _vec3_1.setY(data[i * 9 + 1]);\n          _vec3_1.setZ(data[i * 9 + 2]);\n\n          _vec3_2.setX(data[i * 9 + 3]);\n          _vec3_2.setY(data[i * 9 + 4]);\n          _vec3_2.setZ(data[i * 9 + 5]);\n\n          _vec3_3.setX(data[i * 9 + 6]);\n          _vec3_3.setY(data[i * 9 + 7]);\n          _vec3_3.setZ(data[i * 9 + 8]);\n\n          triangle_mesh.addTriangle(\n            _vec3_1,\n            _vec3_2,\n            _vec3_3,\n            false\n          );\n        }\n\n        shape = new Ammo.btBvhTriangleMeshShape(\n          triangle_mesh,\n          true,\n          true\n        );\n\n        _noncached_shapes[description.id] = shape;\n\n        break;\n      }\n      case 'convex': {\n        shape = new Ammo.btConvexHullShape();\n        const data = description.data;\n\n        for (let i = 0; i < data.length / 3; i++) {\n          _vec3_1.setX(data[i * 3 ]);\n          _vec3_1.setY(data[i * 3 + 1]);\n          _vec3_1.setZ(data[i * 3 + 2]);\n\n          shape.addPoint(_vec3_1);\n        }\n\n        _noncached_shapes[description.id] = shape;\n\n        break;\n      }\n      case 'heightfield': {\n        const points = description.points,\n          xpts = description.xpts,\n          ypts = description.ypts,\n          ptr = Ammo._malloc(4 * xpts * ypts);\n\n        for (let p = 0, p2 = ptr; p < xpts; p++) {\n          for (let j = 0; j < ypts; j++) {\n            Ammo.HEAPF32[p2 >> 2] = points[p];\n            p2 += 4;\n          }\n        }\n\n        shape = new Ammo.btHeightfieldTerrainShape(\n          xpts,\n          ypts,\n          ptr,\n          1,\n          -description.absMaxHeight,\n          description.absMaxHeight,\n          2,\n          'PHY_FLOAT',\n          false\n        );\n\n        _vec3_1.setX(description.xsize / (description.xpts - 1));\n        _vec3_1.setY(description.ysize / (description.ypts - 1));\n        _vec3_1.setZ(1);\n\n        shape.setLocalScaling(_vec3_1);\n\n        _noncached_shapes[description.id] = shape;\n        break;\n      }\n      default:\n        // Not recognized\n        return;\n    }\n\n    return shape;\n  };\n\n  const createSoftBody = (description) => {\n    let body;\n\n    switch (description.type) {\n      case 'softTrimesh': {\n        if (!description.aVertices.length) return false;\n\n        body = softBodyHelpers.CreateFromTriMesh(\n          world.getWorldInfo(),\n          description.aVertices,\n          description.aIndices,\n          description.aIndices.length / 3,\n          true\n        );\n\n        break;\n      }\n      case 'softClothMesh': {\n        const cr = description.corners;\n\n        body = softBodyHelpers.CreatePatch(\n          world.getWorldInfo(),\n          new Ammo.btVector3(cr[0], cr[1], cr[2]),\n          new Ammo.btVector3(cr[3], cr[4], cr[5]),\n          new Ammo.btVector3(cr[6], cr[7], cr[8]),\n          new Ammo.btVector3(cr[9], cr[10], cr[11]),\n          description.segments[0],\n          description.segments[1],\n          0,\n          true\n        );\n\n        break;\n      }\n      default:\n        // Not recognized\n        return;\n    }\n\n    return body;\n  };\n\n  public_functions.init = (params = {}) => {\n    _transform = new Ammo.btTransform();\n    _transform_pos = new Ammo.btTransform();\n    _vec3_1 = new Ammo.btVector3(0, 0, 0);\n    _vec3_2 = new Ammo.btVector3(0, 0, 0);\n    _vec3_3 = new Ammo.btVector3(0, 0, 0);\n    _quat = new Ammo.btQuaternion(0, 0, 0, 0);\n\n    REPORT_CHUNKSIZE = params.reportsize || 50;\n\n    if (SUPPORT_TRANSFERABLE) {\n      // Transferable messages are supported, take advantage of them with TypedArrays\n      worldreport = new Float32Array(2 + REPORT_CHUNKSIZE * WORLDREPORT_ITEMSIZE); // message id + # of objects to report + chunk size * # of values per object\n      collisionreport = new Float32Array(2 + REPORT_CHUNKSIZE * COLLISIONREPORT_ITEMSIZE); // message id + # of collisions to report + chunk size * # of values per object\n      vehiclereport = new Float32Array(2 + REPORT_CHUNKSIZE * VEHICLEREPORT_ITEMSIZE); // message id + # of vehicles to report + chunk size * # of values per object\n      constraintreport = new Float32Array(2 + REPORT_CHUNKSIZE * CONSTRAINTREPORT_ITEMSIZE); // message id + # of constraints to report + chunk size * # of values per object\n    } else {\n      // Transferable messages are not supported, send data as normal arrays\n      worldreport = [];\n      collisionreport = [];\n      vehiclereport = [];\n      constraintreport = [];\n    }\n\n    worldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n    collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n    vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n    constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n\n    const collisionConfiguration = params.whs.softbody\n      ? new Ammo.btSoftBodyRigidBodyCollisionConfiguration()\n      : new Ammo.btDefaultCollisionConfiguration(),\n      dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\n      solver = new Ammo.btSequentialImpulseConstraintSolver();\n\n    let broadphase;\n\n    if (!params.broadphase) params.broadphase = {type: 'dynamic'};\n\n    switch (params.broadphase.type) {\n      case 'sweepprune':\n\n        _vec3_1.setX(params.broadphase.aabbmin.x);\n        _vec3_1.setY(params.broadphase.aabbmin.y);\n        _vec3_1.setZ(params.broadphase.aabbmin.z);\n\n        _vec3_2.setX(params.broadphase.aabbmax.x);\n        _vec3_2.setY(params.broadphase.aabbmax.y);\n        _vec3_2.setZ(params.broadphase.aabbmax.z);\n\n        broadphase = new Ammo.btAxisSweep3(\n          _vec3_1,\n          _vec3_2\n        );\n\n        break;\n\n      case 'dynamic':\n      default:\n        broadphase = new Ammo.btDbvtBroadphase();\n        break;\n    }\n\n    world = params.whs.softbody\n      ? new Ammo.btSoftRigidDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration, new Ammo.btDefaultSoftBodySolver())\n      : new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);\n    fixedTimeStep = params.fixedTimeStep;\n\n    if (params.whs.softbody) _softbody_enabled = true;\n\n    transferableMessage({cmd: 'worldReady'});\n  };\n\n  public_functions.setFixedTimeStep = (description) => {\n    fixedTimeStep = description;\n  };\n\n  public_functions.setGravity = (description) => {\n    _vec3_1.setX(description.x);\n    _vec3_1.setY(description.y);\n    _vec3_1.setZ(description.z);\n    world.setGravity(_vec3_1);\n  };\n\n  public_functions.appendAnchor = (description) => {\n    _objects[description.obj]\n      .appendAnchor(\n        description.node, \n        _objects[description.obj2], \n        description.collisionBetweenLinkedBodies, \n        description.influence\n      );\n  }\n\n  public_functions.addObject = (description) => {\n    let body, motionState;\n\n    if (description.type.indexOf('soft') !== -1) {\n      body = createSoftBody(description);\n\n      const sbConfig = body.get_m_cfg(),\n        physParams = description.params;\n\n      if (physParams.viterations) sbConfig.set_viterations(physParams.viterations);\n      if (physParams.piterations) sbConfig.set_piterations(physParams.piterations);\n      if (physParams.diterations) sbConfig.set_diterations(physParams.diterations);\n      if (physParams.citerations) sbConfig.set_citerations(physParams.citerations);\n      sbConfig.set_collisions(0x11);\n      sbConfig.set_kDF(physParams.friction);\n      sbConfig.set_kDP(physParams.damping);\n      if (physParams.pressure) sbConfig.set_kPR(physParams.pressure);\n      if (physParams.drag) sbConfig.set_kDG(physParams.drag);\n      if (physParams.lift) sbConfig.set_kLF(physParams.lift);\n      if (physParams.anchorHardness) sbConfig.set_kAHR(physParams.anchorHardness);\n      if (physParams.rigidHardness) sbConfig.set_kCHR(physParams.rigidHardness);\n\n      if (physParams.klst) body.get_m_materials().at(0).set_m_kLST(physParams.klst);\n      if (physParams.kast) body.get_m_materials().at(0).set_m_kAST(physParams.kast);\n      if (physParams.kvst) body.get_m_materials().at(0).set_m_kVST(physParams.kvst);\n\n      Ammo.castObject(body, Ammo.btCollisionObject).getCollisionShape().setMargin(physParams.margin ? physParams.margin : 0.1);\n      body.setActivationState(physParams.state || 4);\n      body.type = 0; // SoftBody.\n\n      _transform.setIdentity();\n\n      _vec3_1.setX(description.position.x);\n      _vec3_1.setY(description.position.y);\n      _vec3_1.setZ(description.position.z);\n      _transform.setOrigin(_vec3_1);\n\n      _quat.setX(description.rotation.x);\n      _quat.setY(description.rotation.y);\n      _quat.setZ(description.rotation.z);\n      _quat.setW(description.rotation.w);\n      _transform.setRotation(_quat);\n\n      body.transform(_transform);\n\n      body.setTotalMass(description.mass, false);\n      world.addSoftBody(body, 1, -1);\n      _softbody_report_size += body.get_m_nodes().size();\n      _num_softbody_objects++;\n    } else {\n      const physParams = description.params;\n      let shape = createShape(description);\n\n      if (!shape) return;\n\n      // If there are children then this is a compound shape\n      if (description.children) {\n        const compound_shape = new Ammo.btCompoundShape();\n        compound_shape.addChildShape(_transform, shape);\n\n        for (let i = 0; i < description.children.length; i++) {\n          const _child = description.children[i];\n\n          const trans = new Ammo.btTransform();\n          trans.setIdentity();\n\n          _vec3_1.setX(_child.position_offset.x);\n          _vec3_1.setY(_child.position_offset.y);\n          _vec3_1.setZ(_child.position_offset.z);\n          trans.setOrigin(_vec3_1);\n\n          _quat.setX(_child.rotation.x);\n          _quat.setY(_child.rotation.y);\n          _quat.setZ(_child.rotation.z);\n          _quat.setW(_child.rotation.w);\n          trans.setRotation(_quat);\n\n          shape = createShape(description.children[i]);\n          compound_shape.addChildShape(trans, shape);\n          Ammo.destroy(trans);\n        }\n\n        shape = compound_shape;\n        _compound_shapes[description.id] = shape;\n      }\n\n      _vec3_1.setX(0);\n      _vec3_1.setY(0);\n      _vec3_1.setZ(0);\n      shape.calculateLocalInertia(description.mass, _vec3_1);\n      if (physParams.margin) shape.setMargin(physParams.margin);\n\n      _transform.setIdentity();\n\n      _vec3_2.setX(description.position.x);\n      _vec3_2.setY(description.position.y);\n      _vec3_2.setZ(description.position.z);\n      _transform.setOrigin(_vec3_2);\n\n      _quat.setX(description.rotation.x);\n      _quat.setY(description.rotation.y);\n      _quat.setZ(description.rotation.z);\n      _quat.setW(description.rotation.w);\n      _transform.setRotation(_quat);\n\n      motionState = new Ammo.btDefaultMotionState(_transform); // #TODO: btDefaultMotionState supports center of mass offset as second argument - implement\n      const rbInfo = new Ammo.btRigidBodyConstructionInfo(description.mass, motionState, shape, _vec3_1);\n\n      rbInfo.set_m_friction(physParams.friction);\n      rbInfo.set_m_restitution(physParams.restitution);\n      rbInfo.set_m_linearDamping(physParams.damping);\n      rbInfo.set_m_angularDamping(physParams.damping);\n\n      body = new Ammo.btRigidBody(rbInfo);\n      body.setActivationState(physParams.state || 4);\n      Ammo.destroy(rbInfo);\n\n      if (typeof description.collision_flags !== 'undefined') body.setCollisionFlags(description.collision_flags);\n\n      world.addRigidBody(body);\n      body.type = 1; // RigidBody.\n      _num_rigidbody_objects++;\n    }\n\n    body.activate();\n\n    body.id = description.id;\n    _objects[body.id] = body;\n    _motion_states[body.id] = motionState;\n\n    _objects_ammo[body.a === undefined ? body.ptr : body.a] = body.id;\n    _num_objects++;\n\n    transferableMessage({cmd: 'objectReady', params: body.id});\n  };\n\n  public_functions.addVehicle = (description) => {\n    const vehicle_tuning = new Ammo.btVehicleTuning();\n\n    vehicle_tuning.set_m_suspensionStiffness(description.suspension_stiffness);\n    vehicle_tuning.set_m_suspensionCompression(description.suspension_compression);\n    vehicle_tuning.set_m_suspensionDamping(description.suspension_damping);\n    vehicle_tuning.set_m_maxSuspensionTravelCm(description.max_suspension_travel);\n    vehicle_tuning.set_m_maxSuspensionForce(description.max_suspension_force);\n\n    const vehicle = new Ammo.btRaycastVehicle(\n      vehicle_tuning,\n      _objects[description.rigidBody],\n      new Ammo.btDefaultVehicleRaycaster(world)\n    );\n\n    vehicle.tuning = vehicle_tuning;\n    _objects[description.rigidBody].setActivationState(4);\n    vehicle.setCoordinateSystem(0, 1, 2);\n\n    world.addVehicle(vehicle);\n    _vehicles[description.id] = vehicle;\n  };\n  public_functions.removeVehicle = (description) => {\n    _vehicles[description.id] = null;\n  };\n\n  public_functions.addWheel = (description) => {\n    if (_vehicles[description.id] !== undefined) {\n      let tuning = _vehicles[description.id].tuning;\n      if (description.tuning !== undefined) {\n        tuning = new Ammo.btVehicleTuning();\n        tuning.set_m_suspensionStiffness(description.tuning.suspension_stiffness);\n        tuning.set_m_suspensionCompression(description.tuning.suspension_compression);\n        tuning.set_m_suspensionDamping(description.tuning.suspension_damping);\n        tuning.set_m_maxSuspensionTravelCm(description.tuning.max_suspension_travel);\n        tuning.set_m_maxSuspensionForce(description.tuning.max_suspension_force);\n      }\n\n      _vec3_1.setX(description.connection_point.x);\n      _vec3_1.setY(description.connection_point.y);\n      _vec3_1.setZ(description.connection_point.z);\n\n      _vec3_2.setX(description.wheel_direction.x);\n      _vec3_2.setY(description.wheel_direction.y);\n      _vec3_2.setZ(description.wheel_direction.z);\n\n      _vec3_3.setX(description.wheel_axle.x);\n      _vec3_3.setY(description.wheel_axle.y);\n      _vec3_3.setZ(description.wheel_axle.z);\n\n      _vehicles[description.id].addWheel(\n        _vec3_1,\n        _vec3_2,\n        _vec3_3,\n        description.suspension_rest_length,\n        description.wheel_radius,\n        tuning,\n        description.is_front_wheel\n      );\n    }\n\n    _num_wheels++;\n\n    if (SUPPORT_TRANSFERABLE) {\n      vehiclereport = new Float32Array(1 + _num_wheels * VEHICLEREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n      vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n    } else vehiclereport = [MESSAGE_TYPES.VEHICLEREPORT];\n  };\n\n  public_functions.setSteering = (details) => {\n    if (_vehicles[details.id] !== undefined) _vehicles[details.id].setSteeringValue(details.steering, details.wheel);\n  };\n\n  public_functions.setBrake = (details) => {\n    if (_vehicles[details.id] !== undefined) _vehicles[details.id].setBrake(details.brake, details.wheel);\n  };\n\n  public_functions.applyEngineForce = (details) => {\n    if (_vehicles[details.id] !== undefined) _vehicles[details.id].applyEngineForce(details.force, details.wheel);\n  };\n\n  public_functions.removeObject = (details) => {\n    if (_objects[details.id].type === 0) {\n      _num_softbody_objects--;\n      _softbody_report_size -= _objects[details.id].get_m_nodes().size();\n      world.removeSoftBody(_objects[details.id]);\n    } else if (_objects[details.id].type === 1) {\n      _num_rigidbody_objects--;\n      world.removeRigidBody(_objects[details.id]);\n      Ammo.destroy(_motion_states[details.id]);\n    }\n\n    Ammo.destroy(_objects[details.id]);\n    if (_compound_shapes[details.id]) Ammo.destroy(_compound_shapes[details.id]);\n    if (_noncached_shapes[details.id]) Ammo.destroy(_noncached_shapes[details.id]);\n\n    _objects_ammo[_objects[details.id].a === undefined ? _objects[details.id].a : _objects[details.id].ptr] = null;\n    _objects[details.id] = null;\n    _motion_states[details.id] = null;\n\n    if (_compound_shapes[details.id]) _compound_shapes[details.id] = null;\n    if (_noncached_shapes[details.id]) _noncached_shapes[details.id] = null;\n    _num_objects--;\n  };\n\n  public_functions.updateTransform = (details) => {\n    _object = _objects[details.id];\n\n    if (_object.type === 1) {\n      _object.getMotionState().getWorldTransform(_transform);\n\n      if (details.pos) {\n        _vec3_1.setX(details.pos.x);\n        _vec3_1.setY(details.pos.y);\n        _vec3_1.setZ(details.pos.z);\n        _transform.setOrigin(_vec3_1);\n      }\n\n      if (details.quat) {\n        _quat.setX(details.quat.x);\n        _quat.setY(details.quat.y);\n        _quat.setZ(details.quat.z);\n        _quat.setW(details.quat.w);\n        _transform.setRotation(_quat);\n      }\n\n      _object.setWorldTransform(_transform);\n      _object.activate();\n    } else if (_object.type === 0) {\n      _object.getWorldTransform(_transform);\n\n      if (details.pos) {\n        _vec3_1.setX(details.pos.x);\n        _vec3_1.setY(details.pos.y);\n        _vec3_1.setZ(details.pos.z);\n        _transform.setOrigin(_vec3_1);\n      }\n\n      if (details.quat) {\n        _quat.setX(details.quat.x);\n        _quat.setY(details.quat.y);\n        _quat.setZ(details.quat.z);\n        _quat.setW(details.quat.w);\n        _transform.setRotation(_quat);\n      }\n\n      _object.transform(_transform);\n    }\n  };\n\n  public_functions.updateMass = (details) => {\n    // #TODO: changing a static object into dynamic is buggy\n    _object = _objects[details.id];\n\n    // Per http://www.bulletphysics.org/Bullet/phpBB3/viewtopic.php?p=&f=9&t=3663#p13816\n    world.removeRigidBody(_object);\n\n    _vec3_1.setX(0);\n    _vec3_1.setY(0);\n    _vec3_1.setZ(0);\n\n    _object.setMassProps(details.mass, _vec3_1);\n    world.addRigidBody(_object);\n    _object.activate();\n  };\n\n  public_functions.applyCentralImpulse = (details) => {\n    _vec3_1.setX(details.x);\n    _vec3_1.setY(details.y);\n    _vec3_1.setZ(details.z);\n\n    _objects[details.id].applyCentralImpulse(_vec3_1);\n    _objects[details.id].activate();\n  };\n\n  public_functions.applyImpulse = (details) => {\n    _vec3_1.setX(details.impulse_x);\n    _vec3_1.setY(details.impulse_y);\n    _vec3_1.setZ(details.impulse_z);\n\n    _vec3_2.setX(details.x);\n    _vec3_2.setY(details.y);\n    _vec3_2.setZ(details.z);\n\n    _objects[details.id].applyImpulse(\n      _vec3_1,\n      _vec3_2\n    );\n    _objects[details.id].activate();\n  };\n\n  public_functions.applyTorque = (details) => {\n    _vec3_1.setX(details.torque_x);\n    _vec3_1.setY(details.torque_y);\n    _vec3_1.setZ(details.torque_z);\n\n    _objects[details.id].applyTorque(\n      _vec3_1\n    );\n    _objects[details.id].activate();\n  };\n\n  public_functions.applyCentralForce = (details) => {\n    _vec3_1.setX(details.x);\n    _vec3_1.setY(details.y);\n    _vec3_1.setZ(details.z);\n\n    _objects[details.id].applyCentralForce(_vec3_1);\n    _objects[details.id].activate();\n  };\n\n  public_functions.applyForce = (details) => {\n    _vec3_1.setX(details.force_x);\n    _vec3_1.setY(details.force_y);\n    _vec3_1.setZ(details.force_z);\n\n    _vec3_2.setX(details.x);\n    _vec3_2.setY(details.y);\n    _vec3_2.setZ(details.z);\n\n    _objects[details.id].applyForce(\n      _vec3_1,\n      _vec3_2\n    );\n    _objects[details.id].activate();\n  };\n\n  public_functions.onSimulationResume = () => {\n    last_simulation_time = Date.now();\n  };\n\n  public_functions.setAngularVelocity = (details) => {\n    _vec3_1.setX(details.x);\n    _vec3_1.setY(details.y);\n    _vec3_1.setZ(details.z);\n\n    _objects[details.id].setAngularVelocity(\n      _vec3_1\n    );\n    _objects[details.id].activate();\n  };\n\n  public_functions.setLinearVelocity = (details) => {\n    _vec3_1.setX(details.x);\n    _vec3_1.setY(details.y);\n    _vec3_1.setZ(details.z);\n\n    _objects[details.id].setLinearVelocity(\n      _vec3_1\n    );\n    _objects[details.id].activate();\n  };\n\n  public_functions.setAngularFactor = (details) => {\n    _vec3_1.setX(details.x);\n    _vec3_1.setY(details.y);\n    _vec3_1.setZ(details.z);\n\n    _objects[details.id].setAngularFactor(\n        _vec3_1\n    );\n  };\n\n  public_functions.setLinearFactor = (details) => {\n    _vec3_1.setX(details.x);\n    _vec3_1.setY(details.y);\n    _vec3_1.setZ(details.z);\n\n    _objects[details.id].setLinearFactor(\n      _vec3_1\n    );\n  };\n\n  public_functions.setDamping = (details) => {\n    _objects[details.id].setDamping(details.linear, details.angular);\n  };\n\n  public_functions.setCcdMotionThreshold = (details) => {\n    _objects[details.id].setCcdMotionThreshold(details.threshold);\n  };\n\n  public_functions.setCcdSweptSphereRadius = (details) => {\n    _objects[details.id].setCcdSweptSphereRadius(details.radius);\n  };\n\n  public_functions.addConstraint = (details) => {\n    let constraint;\n\n    switch (details.type) {\n\n      case 'point': {\n        if (details.objectb === undefined) {\n          _vec3_1.setX(details.positiona.x);\n          _vec3_1.setY(details.positiona.y);\n          _vec3_1.setZ(details.positiona.z);\n\n          constraint = new Ammo.btPoint2PointConstraint(\n            _objects[details.objecta],\n            _vec3_1\n          );\n        } else {\n          _vec3_1.setX(details.positiona.x);\n          _vec3_1.setY(details.positiona.y);\n          _vec3_1.setZ(details.positiona.z);\n\n          _vec3_2.setX(details.positionb.x);\n          _vec3_2.setY(details.positionb.y);\n          _vec3_2.setZ(details.positionb.z);\n\n          constraint = new Ammo.btPoint2PointConstraint(\n            _objects[details.objecta],\n            _objects[details.objectb],\n            _vec3_1,\n            _vec3_2\n          );\n        }\n        break;\n      }\n      case 'hinge': {\n        if (details.objectb === undefined) {\n          _vec3_1.setX(details.positiona.x);\n          _vec3_1.setY(details.positiona.y);\n          _vec3_1.setZ(details.positiona.z);\n\n          _vec3_2.setX(details.axis.x);\n          _vec3_2.setY(details.axis.y);\n          _vec3_2.setZ(details.axis.z);\n\n          constraint = new Ammo.btHingeConstraint(\n            _objects[details.objecta],\n            _vec3_1,\n            _vec3_2\n          );\n        } else {\n          _vec3_1.setX(details.positiona.x);\n          _vec3_1.setY(details.positiona.y);\n          _vec3_1.setZ(details.positiona.z);\n\n          _vec3_2.setX(details.positionb.x);\n          _vec3_2.setY(details.positionb.y);\n          _vec3_2.setZ(details.positionb.z);\n\n          _vec3_3.setX(details.axis.x);\n          _vec3_3.setY(details.axis.y);\n          _vec3_3.setZ(details.axis.z);\n\n          constraint = new Ammo.btHingeConstraint(\n            _objects[details.objecta],\n            _objects[details.objectb],\n            _vec3_1,\n            _vec3_2,\n            _vec3_3,\n            _vec3_3\n          );\n        }\n        break;\n      }\n      case 'slider': {\n        let transformb;\n        const transforma = new Ammo.btTransform();\n\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        transforma.setOrigin(_vec3_1);\n\n        let rotation = transforma.getRotation();\n        rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);\n        transforma.setRotation(rotation);\n\n        if (details.objectb) {\n          transformb = new Ammo.btTransform();\n\n          _vec3_2.setX(details.positionb.x);\n          _vec3_2.setY(details.positionb.y);\n          _vec3_2.setZ(details.positionb.z);\n\n          transformb.setOrigin(_vec3_2);\n\n          rotation = transformb.getRotation();\n          rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);\n          transformb.setRotation(rotation);\n\n          constraint = new Ammo.btSliderConstraint(\n            _objects[details.objecta],\n            _objects[details.objectb],\n            transforma,\n            transformb,\n            true\n          );\n        } else {\n          constraint = new Ammo.btSliderConstraint(\n            _objects[details.objecta],\n            transforma,\n            true\n          );\n        }\n\n        Ammo.destroy(transforma);\n        if (transformb !== undefined) Ammo.destroy(transformb);\n\n        break;\n      }\n      case 'conetwist': {\n        const transforma = new Ammo.btTransform();\n        transforma.setIdentity();\n\n        const transformb = new Ammo.btTransform();\n        transformb.setIdentity();\n\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        transforma.setOrigin(_vec3_1);\n        transformb.setOrigin(_vec3_2);\n\n        let rotation = transforma.getRotation();\n        rotation.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);\n        transforma.setRotation(rotation);\n\n        rotation = transformb.getRotation();\n        rotation.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);\n        transformb.setRotation(rotation);\n\n        constraint = new Ammo.btConeTwistConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          transforma,\n          transformb\n        );\n\n        constraint.setLimit(Math.PI, 0, Math.PI);\n\n        Ammo.destroy(transforma);\n        Ammo.destroy(transformb);\n\n        break;\n      }\n      case 'dof': {\n        let transformb;\n\n        const transforma = new Ammo.btTransform();\n        transforma.setIdentity();\n\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        transforma.setOrigin(_vec3_1);\n\n        let rotation = transforma.getRotation();\n        rotation.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);\n        transforma.setRotation(rotation);\n\n        if (details.objectb) {\n          transformb = new Ammo.btTransform();\n          transformb.setIdentity();\n\n          _vec3_2.setX(details.positionb.x);\n          _vec3_2.setY(details.positionb.y);\n          _vec3_2.setZ(details.positionb.z);\n\n          transformb.setOrigin(_vec3_2);\n\n          rotation = transformb.getRotation();\n          rotation.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);\n          transformb.setRotation(rotation);\n\n          constraint = new Ammo.btGeneric6DofConstraint(\n            _objects[details.objecta],\n            _objects[details.objectb],\n            transforma,\n            transformb,\n            true\n          );\n        } else {\n          constraint = new Ammo.btGeneric6DofConstraint(\n            _objects[details.objecta],\n            transforma,\n            true\n          );\n        }\n\n        Ammo.destroy(transforma);\n        if (transformb !== undefined) Ammo.destroy(transformb);\n\n        break;\n      }\n      default:\n        return;\n    }\n\n    world.addConstraint(constraint);\n\n    constraint.a = _objects[details.objecta];\n    constraint.b = _objects[details.objectb];\n\n    constraint.ta = transforma;\n    constraint.tb = transformb;\n\n    constraint.enableFeedback();\n    _constraints[details.id] = constraint;\n    _num_constraints++;\n\n    if (SUPPORT_TRANSFERABLE) {\n      constraintreport = new Float32Array(1 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n      constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n    } else constraintreport = [MESSAGE_TYPES.CONSTRAINTREPORT];\n  };\n\n  public_functions.removeConstraint = (details) => {\n    const constraint = _constraints[details.id];\n\n    if (constraint !== undefined) {\n      world.removeConstraint(constraint);\n      _constraints[details.id] = null;\n      _num_constraints--;\n    }\n  };\n\n  public_functions.constraint_setBreakingImpulseThreshold = (details) => {\n    const constraint = _constraints[details.id];\n    if (constraint !== undefind) constraint.setBreakingImpulseThreshold(details.threshold);\n  };\n\n  public_functions.simulate = (params = {}) => {\n    if (world) {\n      if (params.timeStep && params.timeStep < fixedTimeStep)\n        params.timeStep = fixedTimeStep;\n\n      params.maxSubSteps = params.maxSubSteps || Math.ceil(params.timeStep / fixedTimeStep); // If maxSubSteps is not defined, keep the simulation fully up to date\n\n      world.stepSimulation(params.timeStep, params.maxSubSteps, fixedTimeStep);\n\n      if (_vehicles.length > 0) reportVehicles();\n      reportCollisions();\n      if (_constraints.length > 0) reportConstraints();\n      reportWorld();\n      if (_softbody_enabled) reportWorld_softbodies();\n    }\n  };\n\n  // Constraint functions\n  public_functions.hinge_setLimits = (params) => {\n    _constraints[params.constraint].setLimit(params.low, params.high, 0, params.bias_factor, params.relaxation_factor);\n  };\n\n  public_functions.hinge_enableAngularMotor = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.enableAngularMotor(true, params.velocity, params.acceleration);\n    constraint.a.activate();\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.hinge_disableMotor = (params) => {\n    _constraints[params.constraint].enableMotor(false);\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.slider_setLimits = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.setLowerLinLimit(params.lin_lower || 0);\n    constraint.setUpperLinLimit(params.lin_upper || 0);\n\n    constraint.setLowerAngLimit(params.ang_lower || 0);\n    constraint.setUpperAngLimit(params.ang_upper || 0);\n  };\n\n  public_functions.slider_setRestitution = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.setSoftnessLimLin(params.linear || 0);\n    constraint.setSoftnessLimAng(params.angular || 0);\n  };\n\n  public_functions.slider_enableLinearMotor = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.setTargetLinMotorVelocity(params.velocity);\n    constraint.setMaxLinMotorForce(params.acceleration);\n    constraint.setPoweredLinMotor(true);\n    constraint.a.activate();\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.slider_disableLinearMotor = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.setPoweredLinMotor(false);\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.slider_enableAngularMotor = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.setTargetAngMotorVelocity(params.velocity);\n    constraint.setMaxAngMotorForce(params.acceleration);\n    constraint.setPoweredAngMotor(true);\n    constraint.a.activate();\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.slider_disableAngularMotor = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.setPoweredAngMotor(false);\n    constraint.a.activate();\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.conetwist_setLimit = (params) => {\n    _constraints[params.constraint].setLimit(params.z, params.y, params.x); // ZYX order\n  };\n\n  public_functions.conetwist_enableMotor = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.enableMotor(true);\n    constraint.a.activate();\n    constraint.b.activate();\n  };\n\n  public_functions.conetwist_setMaxMotorImpulse = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.setMaxMotorImpulse(params.max_impulse);\n    constraint.a.activate();\n    constraint.b.activate();\n  };\n\n  public_functions.conetwist_setMotorTarget = (params) => {\n    const constraint = _constraints[params.constraint];\n\n    _quat.setX(params.x);\n    _quat.setY(params.y);\n    _quat.setZ(params.z);\n    _quat.setW(params.w);\n\n    constraint.setMotorTarget(_quat);\n\n    constraint.a.activate();\n    constraint.b.activate();\n  };\n\n  public_functions.conetwist_disableMotor = (params) => {\n    const constraint = _constraints[params.constraint];\n    constraint.enableMotor(false);\n    constraint.a.activate();\n    constraint.b.activate();\n  };\n\n  public_functions.dof_setLinearLowerLimit = (params) => {\n    const constraint = _constraints[params.constraint];\n\n    _vec3_1.setX(params.x);\n    _vec3_1.setY(params.y);\n    _vec3_1.setZ(params.z);\n\n    constraint.setLinearLowerLimit(_vec3_1);\n    constraint.a.activate();\n\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.dof_setLinearUpperLimit = (params) => {\n    const constraint = _constraints[params.constraint];\n\n    _vec3_1.setX(params.x);\n    _vec3_1.setY(params.y);\n    _vec3_1.setZ(params.z);\n\n    constraint.setLinearUpperLimit(_vec3_1);\n    constraint.a.activate();\n\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.dof_setAngularLowerLimit = (params) => {\n    const constraint = _constraints[params.constraint];\n\n    _vec3_1.setX(params.x);\n    _vec3_1.setY(params.y);\n    _vec3_1.setZ(params.z);\n\n    constraint.setAngularLowerLimit(_vec3_1);\n    constraint.a.activate();\n\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.dof_setAngularUpperLimit = (params) => {\n    const constraint = _constraints[params.constraint];\n\n    _vec3_1.setX(params.x);\n    _vec3_1.setY(params.y);\n    _vec3_1.setZ(params.z);\n\n    constraint.setAngularUpperLimit(_vec3_1);\n    constraint.a.activate();\n\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.dof_enableAngularMotor = (params) => {\n    const constraint = _constraints[params.constraint];\n\n    const motor = constraint.getRotationalLimitMotor(params.which);\n    motor.set_m_enableMotor(true);\n    constraint.a.activate();\n\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.dof_configureAngularMotor = (params) => {\n    const constraint = _constraints[params.constraint],\n      motor = constraint.getRotationalLimitMotor(params.which);\n\n    motor.set_m_loLimit(params.low_angle);\n    motor.set_m_hiLimit(params.high_angle);\n    motor.set_m_targetVelocity(params.velocity);\n    motor.set_m_maxMotorForce(params.max_force);\n    constraint.a.activate();\n\n    if (constraint.b) constraint.b.activate();\n  };\n\n  public_functions.dof_disableAngularMotor = (params) => {\n    const constraint = _constraints[params.constraint],\n      motor = constraint.getRotationalLimitMotor(params.which);\n\n    motor.set_m_enableMotor(false);\n    constraint.a.activate();\n\n    if (constraint.b) constraint.b.activate();\n  };\n\n  const reportWorld = () => {\n    if (SUPPORT_TRANSFERABLE && worldreport.length < 2 + _num_rigidbody_objects * WORLDREPORT_ITEMSIZE) {\n      worldreport = new Float32Array(\n        2// message id & # objects in report\n        + (Math.ceil(_num_rigidbody_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * WORLDREPORT_ITEMSIZE // # of values needed * item size\n      );\n\n      worldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n    }\n\n    worldreport[1] = _num_rigidbody_objects; // record how many objects we're reporting on\n\n    {\n      let i = 0,\n        index = _objects.length;\n\n      while (index--) {\n        const object = _objects[index];\n\n        if (object && object.type === 1) { // RigidBodies.\n          // #TODO: we can't use center of mass transform when center of mass can change,\n          //        but getMotionState().getWorldTransform() screws up on objects that have been moved\n          // object.getMotionState().getWorldTransform( transform );\n          // object.getMotionState().getWorldTransform(_transform);\n\n          const transform = object.getCenterOfMassTransform();\n          const origin = transform.getOrigin();\n          const rotation = transform.getRotation();\n\n          // add values to report\n          const offset = 2 + (i++) * WORLDREPORT_ITEMSIZE;\n\n          worldreport[offset] = object.id;\n\n          worldreport[offset + 1] = origin.x();\n          worldreport[offset + 2] = origin.y();\n          worldreport[offset + 3] = origin.z();\n\n          worldreport[offset + 4] = rotation.x();\n          worldreport[offset + 5] = rotation.y();\n          worldreport[offset + 6] = rotation.z();\n          worldreport[offset + 7] = rotation.w();\n\n          _vector = object.getLinearVelocity();\n          worldreport[offset + 8] = _vector.x();\n          worldreport[offset + 9] = _vector.y();\n          worldreport[offset + 10] = _vector.z();\n\n          _vector = object.getAngularVelocity();\n          worldreport[offset + 11] = _vector.x();\n          worldreport[offset + 12] = _vector.y();\n          worldreport[offset + 13] = _vector.z();\n        }\n      }\n    }\n\n    if (SUPPORT_TRANSFERABLE) transferableMessage(worldreport.buffer, [worldreport.buffer]);\n    else transferableMessage(worldreport);\n  };\n\n  const reportWorld_softbodies = () => {\n    // TODO: Add SUPPORTTRANSFERABLE.\n\n    softreport = new Float32Array(\n      2 // message id & # objects in report\n      + _num_softbody_objects * 2\n      + _softbody_report_size * 6\n    );\n\n    softreport[0] = MESSAGE_TYPES.SOFTREPORT;\n    softreport[1] = _num_softbody_objects; // record how many objects we're reporting on\n\n    {\n      let offset = 2,\n        index = _objects.length;\n\n      while (index--) {\n        const object = _objects[index];\n\n        if (object && object.type === 0) { // SoftBodies.\n          const size = object.get_m_nodes().size();\n\n          softreport[offset] = object.id;\n          softreport[offset + 1] = size; // Vertices ammount.\n\n          const offsetVert = offset + 2;\n\n          for (let i = 0; i < size; i++) {\n            const node = object.get_m_nodes().at(i);\n            const vert = node.get_m_x();\n            const normal = node.get_m_n();\n\n            softreport[offsetVert + i * 6] = vert.x();\n            softreport[offsetVert + i * 6 + 1] = vert.y();\n            softreport[offsetVert + i * 6 + 2] = vert.z();\n\n            softreport[offsetVert + i * 6 + 3] = normal.x();\n            softreport[offsetVert + i * 6 + 4] = normal.y();\n            softreport[offsetVert + i * 6 + 5] = normal.z();\n          }\n\n          offset += size * 6 + 2;\n        }\n      }\n    }\n\n    // if (SUPPORT_TRANSFERABLE) transferableMessage(softreport.buffer, [softreport.buffer]);\n    // else transferableMessage(softreport);\n    transferableMessage(softreport);\n  };\n\n  const reportCollisions = () => {\n    const dp = world.getDispatcher(),\n      num = dp.getNumManifolds();\n      // _collided = false;\n\n    if (SUPPORT_TRANSFERABLE) {\n      if (collisionreport.length < 2 + num * COLLISIONREPORT_ITEMSIZE) {\n        collisionreport = new Float32Array(\n          2 // message id & # objects in report\n          + (Math.ceil(_num_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * COLLISIONREPORT_ITEMSIZE // # of values needed * item size\n        );\n        collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n      }\n    }\n\n    collisionreport[1] = 0; // how many collisions we're reporting on\n\n    for (let i = 0; i < num; i++) {\n      const manifold = dp.getManifoldByIndexInternal(i),\n        num_contacts = manifold.getNumContacts();\n\n      if (num_contacts === 0) continue;\n\n      for (let j = 0; j < num_contacts; j++) {\n        const pt = manifold.getContactPoint(j);\n\n        // if ( pt.getDistance() < 0 ) {\n        const offset = 2 + (collisionreport[1]++) * COLLISIONREPORT_ITEMSIZE;\n        collisionreport[offset] = _objects_ammo[manifold.getBody0().ptr];\n        collisionreport[offset + 1] = _objects_ammo[manifold.getBody1().ptr];\n\n        _vector = pt.get_m_normalWorldOnB();\n        collisionreport[offset + 2] = _vector.x();\n        collisionreport[offset + 3] = _vector.y();\n        collisionreport[offset + 4] = _vector.z();\n        break;\n        // }\n        // transferableMessage(_objects_ammo);\n      }\n    }\n\n    if (SUPPORT_TRANSFERABLE) transferableMessage(collisionreport.buffer, [collisionreport.buffer]);\n    else transferableMessage(collisionreport);\n  };\n\n  const reportVehicles = function () {\n    if (SUPPORT_TRANSFERABLE) {\n      if (vehiclereport.length < 2 + _num_wheels * VEHICLEREPORT_ITEMSIZE) {\n        vehiclereport = new Float32Array(\n          2 // message id & # objects in report\n          + (Math.ceil(_num_wheels / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * VEHICLEREPORT_ITEMSIZE // # of values needed * item size\n        );\n        vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n      }\n    }\n\n    {\n      let i = 0,\n        j = 0,\n        index = _vehicles.length;\n\n      while (index--) {\n        if (_vehicles[index]) {\n          const vehicle = _vehicles[index];\n\n          for (j = 0; j < vehicle.getNumWheels(); j++) {\n            // vehicle.updateWheelTransform( j, true );\n            // transform = vehicle.getWheelTransformWS( j );\n            const transform = vehicle.getWheelInfo(j).get_m_worldTransform();\n\n            const origin = transform.getOrigin();\n            const rotation = transform.getRotation();\n\n            // add values to report\n            const offset = 1 + (i++) * VEHICLEREPORT_ITEMSIZE;\n\n            vehiclereport[offset] = index;\n            vehiclereport[offset + 1] = j;\n\n            vehiclereport[offset + 2] = origin.x();\n            vehiclereport[offset + 3] = origin.y();\n            vehiclereport[offset + 4] = origin.z();\n\n            vehiclereport[offset + 5] = rotation.x();\n            vehiclereport[offset + 6] = rotation.y();\n            vehiclereport[offset + 7] = rotation.z();\n            vehiclereport[offset + 8] = rotation.w();\n          }\n        }\n      }\n\n      if (SUPPORT_TRANSFERABLE && j !== 0) transferableMessage(vehiclereport.buffer, [vehiclereport.buffer]);\n      else if (j !== 0) transferableMessage(vehiclereport);\n    }\n  };\n\n  const reportConstraints = function () {\n    if (SUPPORT_TRANSFERABLE) {\n      if (constraintreport.length < 2 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE) {\n        constraintreport = new Float32Array(\n          2 // message id & # objects in report\n          + (Math.ceil(_num_constraints / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * CONSTRAINTREPORT_ITEMSIZE // # of values needed * item size\n        );\n        constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n      }\n    }\n\n    {\n      let offset = 0,\n        i = 0,\n        index = _constraints.lenght;\n\n      while (index--) {\n        if (_constraints[index]) {\n          const constraint = _constraints[index];\n          const offset_body = constraint.a;\n          const transform = constraint.ta;\n          const origin = transform.getOrigin();\n\n          // add values to report\n          offset = 1 + (i++) * CONSTRAINTREPORT_ITEMSIZE;\n\n          constraintreport[offset] = index;\n          constraintreport[offset + 1] = offset_body.id;\n          constraintreport[offset + 2] = origin.x;\n          constraintreport[offset + 3] = origin.y;\n          constraintreport[offset + 4] = origin.z;\n          constraintreport[offset + 5] = constraint.getBreakingImpulseThreshold();\n        }\n      }\n\n      if (SUPPORT_TRANSFERABLE && i !== 0) transferableMessage(constraintreport.buffer, [constraintreport.buffer]);\n      else if (i !== 0) transferableMessage(constraintreport);\n    }\n  };\n\n  self.onmessage = function (event) {\n    if (event.data instanceof Float32Array) {\n      // transferable object\n      switch (event.data[0]) {\n        case MESSAGE_TYPES.WORLDREPORT: {\n          worldreport = new Float32Array(event.data);\n          break;\n        }\n        case MESSAGE_TYPES.COLLISIONREPORT: {\n          collisionreport = new Float32Array(event.data);\n          break;\n        }\n        case MESSAGE_TYPES.VEHICLEREPORT: {\n          vehiclereport = new Float32Array(event.data);\n          break;\n        }\n        case MESSAGE_TYPES.CONSTRAINTREPORT: {\n          constraintreport = new Float32Array(event.data);\n          break;\n        }\n        default:\n      }\n\n      return;\n    } else if (event.data.cmd && public_functions[event.data.cmd]) public_functions[event.data.cmd](event.data.params);\n  };\n};\n"]}