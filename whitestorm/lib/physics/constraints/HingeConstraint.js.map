{"version":3,"sources":["physics/constraints/HingeConstraint.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;;;IAEa,e,WAAA,e;AACX,2BAAY,IAAZ,EAAkB,IAAlB,EAAwB,QAAxB,EAAkC,IAAlC,EAAwC;AAAA;;AACtC,QAAM,UAAU,KAAK,SAAL,EAAhB;AACA,QAAI,UAAU,KAAK,SAAL,EAAd;;AAEA,QAAI,SAAS,SAAb,EAAwB;AACtB,aAAO,QAAP;AACA,iBAAW,OAAX;AACA,gBAAU,SAAV;AACD;;AAED,SAAK,IAAL,GAAY,OAAZ;AACA,SAAK,cAAL,GAAsB,CAAtB;AACA,SAAK,EAAL,GAAU,uBAAV;AACA,SAAK,KAAL,GAAa,QAAQ,MAArB;AACA,SAAK,OAAL,GAAe,QAAQ,QAAR,CAAiB,EAAhC;AACA,SAAK,SAAL,GAAiB,uCAA6B,QAA7B,EAAuC,OAAvC,EAAgD,KAAhD,EAAjB;AACA,SAAK,QAAL,GAAgB,SAAS,KAAT,EAAhB;AACA,SAAK,IAAL,GAAY,IAAZ;;AAEA,QAAI,OAAJ,EAAa;AACX,WAAK,OAAL,GAAe,QAAQ,QAAR,CAAiB,EAAhC;AACA,WAAK,SAAL,GAAiB,uCAA6B,QAA7B,EAAuC,OAAvC,EAAgD,KAAhD,EAAjB;AACD;AACF;;;;oCAEe;AACd,aAAO;AACL,cAAM,KAAK,IADN;AAEL,YAAI,KAAK,EAFJ;AAGL,iBAAS,KAAK,OAHT;AAIL,iBAAS,KAAK,OAJT;AAKL,mBAAW,KAAK,SALX;AAML,mBAAW,KAAK,SANX;AAOL,cAAM,KAAK;AAPN,OAAP;AASD;;;8BAES,G,EAAK,I,EAAM,W,EAAa,iB,EAAmB;AACnD,WAAK,KAAL,CAAW,OAAX,CAAmB,iBAAnB,EAAsC;AACpC,oBAAY,KAAK,EADmB;AAEpC,gBAFoC;AAGpC,kBAHoC;AAIpC,gCAJoC;AAKpC;AALoC,OAAtC;AAOD;;;uCAEkB,Q,EAAU,Y,EAAc;AACzC,WAAK,KAAL,CAAW,OAAX,CAAmB,0BAAnB,EAA+C;AAC7C,oBAAY,KAAK,EAD4B;AAE7C,0BAF6C;AAG7C;AAH6C,OAA/C;AAKD;;;mCAEc;AACb,WAAK,KAAL,CAAW,OAAX,CAAmB,oBAAnB,EAAyC,EAAC,YAAY,KAAK,EAAlB,EAAzC;AACD","file":"HingeConstraint.js","sourcesContent":["import {convertWorldPositionToObject, getObjectId} from '../api';\r\n\r\nexport class HingeConstraint {\r\n  constructor(obja, objb, position, axis) {\r\n    const objecta = obja.getNative();\r\n    let objectb = obja.getNative();\r\n\r\n    if (axis === undefined) {\r\n      axis = position;\r\n      position = objectb;\r\n      objectb = undefined;\r\n    }\r\n\r\n    this.type = 'hinge';\r\n    this.appliedImpulse = 0;\r\n    this.id = getObjectId();\r\n    this.scene = objecta.parent;\r\n    this.objecta = objecta._physijs.id;\r\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\r\n    this.position = position.clone();\r\n    this.axis = axis;\r\n\r\n    if (objectb) {\r\n      this.objectb = objectb._physijs.id;\r\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\r\n    }\r\n  }\r\n\r\n  getDefinition() {\r\n    return {\r\n      type: this.type,\r\n      id: this.id,\r\n      objecta: this.objecta,\r\n      objectb: this.objectb,\r\n      positiona: this.positiona,\r\n      positionb: this.positionb,\r\n      axis: this.axis\r\n    };\r\n  }\r\n\r\n  setLimits(low, high, bias_factor, relaxation_factor) {\r\n    this.scene.execute('hinge_setLimits', {\r\n      constraint: this.id,\r\n      low,\r\n      high,\r\n      bias_factor,\r\n      relaxation_factor\r\n    });\r\n  }\r\n\r\n  enableAngularMotor(velocity, acceleration) {\r\n    this.scene.execute('hinge_enableAngularMotor', {\r\n      constraint: this.id,\r\n      velocity,\r\n      acceleration\r\n    });\r\n  }\r\n\r\n  disableMotor() {\r\n    this.scene.execute('hinge_disableMotor', {constraint: this.id});\r\n  }\r\n}\r\n"]}