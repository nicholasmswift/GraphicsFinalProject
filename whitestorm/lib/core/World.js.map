{"version":3,"sources":["core/World.js"],"names":[],"mappings":"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","file":"World.js","sourcesContent":["import * as THREE from 'three';\r\nimport Stats from 'stats.js';\r\nimport * as Physijs from '../physics/index.js';\r\n\r\nimport {PerspectiveCamera} from '../cameras/PerspectiveCamera';\r\nimport {Camera} from './Camera';\r\nimport {Shape} from './Shape';\r\nimport {Light} from './Light';\r\nimport {WHSObject} from './Object';\r\n\r\nclass World extends WHSObject {\r\n  /**\r\n   * Create a 3D world and define defaults.\r\n   *\r\n   * @param {object} params - The scene settings object.\r\n   * @return {World} A 3D world whs object.\r\n   */\r\n  constructor(params = {}) {\r\n    super({\r\n      stats: false,\r\n      autoresize: false,\r\n      softbody: false,\r\n\r\n      shadowmap: {\r\n        enabled: true,\r\n        type: THREE.PCFSoftShadowMap\r\n      },\r\n\r\n      helpers: {\r\n        grid: false,\r\n        axis: false\r\n      },\r\n\r\n      gravity: {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n      },\r\n\r\n      camera: {\r\n        aspect: 75,\r\n        near: 1,\r\n        far: 1000,\r\n\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n      },\r\n\r\n      rWidth: 1, // Resolution(width).\r\n      rHeight: 1, // Resolution(height).\r\n\r\n      width: window.innerWidth, // Container(width).\r\n      height: window.innerHeight, // Container(height).\r\n\r\n      physics: {\r\n        fixedTimeStep: 1 / 60\r\n      },\r\n\r\n      fog: {\r\n        type: false,\r\n\r\n        density: 0.00025,\r\n        hex: 0x000000,\r\n        near: 1,\r\n        far: 1000\r\n      },\r\n\r\n      init: {\r\n        scene: true,\r\n        stats: true,\r\n        camera: true,\r\n        helpers: true,\r\n        renderer: true\r\n      },\r\n\r\n      background: {\r\n        color: 0x000000,\r\n        opacity: 1\r\n      },\r\n\r\n      renderer: {},\r\n      container: document.body\r\n    });\r\n\r\n    super.setParams(params);\r\n\r\n    const initParams = this.getParams().init;\r\n\r\n    // INIT.\r\n    this._initDOM();\r\n    if (initParams.scene) this._initScene();\r\n    if (initParams.scene && initParams.stats) this._initStats();\r\n\r\n    if (initParams.scene && initParams.camera) this._initCamera();\r\n    if (initParams.scene && initParams.renderer) this._initRenderer();\r\n    if (initParams.scene && initParams.helpers) this._initHelpers();\r\n\r\n    // NOTE: ==================== Autoresize. ======================\r\n    const scope = this;\r\n\r\n    if (params.autoresize === \"window\") {\r\n      window.addEventListener('resize', () => {\r\n        scope.setSize(\r\n          Number(window.innerWidth * params.rWidth).toFixed(),\r\n          Number(window.innerHeight * params.rHeight).toFixed()\r\n        );\r\n      });\r\n    } else if (this.getParams().autoresize) {\r\n      window.addEventListener('resize', () => {\r\n        scope.setSize(\r\n          Number(params.container.offsetWidth * params.rWidth).toFixed(),\r\n          Number(params.container.offsetHeight * params.rHeight).toFixed()\r\n        );\r\n      });\r\n    }\r\n\r\n    scope.loops = [];\r\n\r\n    return scope;\r\n  }\r\n\r\n  /**\r\n   * Initialize THREE.js scene object.\r\n   */\r\n  _initScene() {\r\n    const params = this.getParams(),\r\n      scene = !!'physics'\r\n      ? new Physijs.Scene(\r\n        {\r\n          fixedTimeStep: params.physics.fixedTimeStep\r\n        },\r\n        {\r\n          stats: params.stats,\r\n          world: this,\r\n          softbody: params.softbody\r\n        }\r\n      ) : new THREE.Scene();\r\n\r\n    if (!!'physics') {\r\n      scene.setGravity(\r\n        new THREE.Vector3(\r\n          params.gravity.x,\r\n          params.gravity.y,\r\n          params.gravity.z\r\n        )\r\n      );\r\n\r\n      this.simulate = true;\r\n    } else this.simulate = false;\r\n\r\n    if (params.fog.type === 'regular')\r\n      scene.fog = new THREE.Fog(params.fog.hex, params.fog.near, params.fog.far);\r\n    else if (params.fog.type === 'exp'\r\n      || params.fog.type === 'expodential')\r\n      scene.fog = new THREE.FogExp2(params.fog.hex, params.fog.density);\r\n\r\n    this.setScene(scene, false);\r\n\r\n    // Array for processing.\r\n    this.children = [];\r\n  }\r\n\r\n  addLoop(loop) {\r\n    this.loops.push(loop); // TODO: Process loops on start\r\n    // like: this.loops.forEach((elem) => elem.start());\r\n  }\r\n\r\n  removeLoop(loop) {\r\n    this.loops.filter((l) => l !== loop);\r\n  }\r\n\r\n  /**\r\n   * Initialize DOM structure for whitestorm.\r\n   */\r\n  _initDOM() {\r\n    const params = this.getParams();\r\n\r\n    params.container.style.margin = 0;\r\n    params.container.style.padding = 0;\r\n    params.container.style.position = 'relative';\r\n    params.container.style.overflow = 'hidden';\r\n\r\n    this._dom = document.createElement('div');\r\n    this._dom.className = 'whs';\r\n\r\n    params.container.appendChild(this._dom);\r\n\r\n    return this._dom;\r\n  }\r\n\r\n  /**\r\n   * Inititialize stats plugin.\r\n   */\r\n  _initStats() {\r\n    const params = this.getParams();\r\n\r\n    if (params.stats) {\r\n      this._stats = new Stats();\r\n\r\n      if (params.stats === 'fps')\r\n        this._stats.setMode(0);\r\n\r\n      else if (params.stats === 'ms')\r\n        this._stats.setMode(1);\r\n\r\n      else if (params.stats === 'mb')\r\n        this._stats.setMode(1);\r\n\r\n      else {\r\n        this._stats.setMode(0);\r\n        console.warn([this._stats], 'Please, apply stats mode [fps, ms, mb] .');\r\n      }\r\n\r\n      this._stats.domElement.style.position = 'absolute';\r\n      this._stats.domElement.style.left = '0px';\r\n      this._stats.domElement.style.bottom = '0px';\r\n\r\n      this._dom.appendChild(this._stats.domElement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a camera and add it to scene.\r\n   */\r\n  _initCamera() {\r\n    const params = this.getParams();\r\n\r\n    this.setCamera(new PerspectiveCamera({\r\n      camera: {\r\n        fov: params.camera.aspect,\r\n        aspect: params.width / params.height,\r\n        near: params.camera.near,\r\n        far: params.camera.far\r\n      },\r\n\r\n      pos: {\r\n        x: params.camera.x,\r\n        y: params.camera.y,\r\n        z: params.camera.z\r\n      }\r\n    }));\r\n\r\n    this.getCamera().addTo(this);\r\n  }\r\n\r\n  /**\r\n   * Create a renderer and apply it's options.\r\n   */\r\n  _initRenderer() {\r\n    this.render = true;\r\n\r\n    // Renderer.\r\n    this.setRenderer(new THREE.WebGLRenderer(this.getParams().renderer));\r\n\r\n    const renderer = this.getRenderer();\r\n    renderer.setClearColor(this.getParams().background.color, this.getParams().background.opacity);\r\n\r\n    // Shadowmap.\r\n    renderer.shadowMap.enabled = this.getParams().shadowmap.enabled;\r\n    renderer.shadowMap.type = this.getParams().shadowmap.type;\r\n    renderer.shadowMap.cascade = true;\r\n\r\n    renderer.setSize(\r\n      Number(this.getParams().width * this.getParams().rWidth).toFixed(),\r\n      Number(this.getParams().height * this.getParams().rHeight).toFixed()\r\n    );\r\n\r\n    renderer.render(this.getScene(), this.getCamera().getNative());\r\n\r\n    this._dom.appendChild(renderer.domElement);\r\n\r\n    renderer.domElement.style.width = '100%';\r\n    renderer.domElement.style.height = '100%';\r\n  }\r\n\r\n  /**\r\n   * Add helpers to scene.\r\n   */\r\n  _initHelpers() {\r\n    const params = this.getParams(),\r\n      scene = this.getScene();\r\n\r\n    if (params.helpers.axis) {\r\n      scene.add(\r\n        new THREE.AxisHelper(\r\n          params.helpers.axis.size\r\n          ? params.helpers.axis.size\r\n          : 5\r\n        )\r\n      );\r\n    }\r\n\r\n    if (params.helpers.grid) {\r\n      scene.add(\r\n        new THREE.GridHelper(\r\n          params.helpers.grid.size\r\n          ? params.helpers.grid.size\r\n          : 10,\r\n          params.helpers.grid.step\r\n          ? params.helpers.grid.step\r\n          : 1,\r\n          params.helpers.grid.color1,\r\n          params.helpers.grid.color2\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start animation.\r\n   */\r\n  start() {\r\n    const clock = new THREE.Clock(),\r\n      _scope = this,\r\n      scene = _scope.getScene(),\r\n      cameraNative = _scope.getCamera().getNative(),\r\n      renderer = _scope.getRenderer();\r\n\r\n    window.requestAnimFrame = (() => {\r\n      return window.requestAnimationFrame\r\n        || window.webkitRequestAnimationFrame\r\n        || window.mozRequestAnimationFrame\r\n        || function (callback) {\r\n          window.setTimeout(callback, 1000 / 60);\r\n        };\r\n    })();\r\n\r\n    function reDraw(time) {\r\n      window.requestAnimFrame(reDraw);\r\n\r\n      // Init stats.\r\n      if (_scope._stats) _scope._stats.begin();\r\n\r\n      _scope._process(clock.getDelta());\r\n      if (_scope.controls) _scope._updateControls();\r\n\r\n      if (_scope.simulate) scene.simulate(clock.getDelta(), 1);\r\n\r\n      // Effects rendering.\r\n      if (_scope._composer && _scope.render) {\r\n        _scope._composer.reset();\r\n        _scope._composer.render(scene, cameraNative);\r\n        _scope._composer.pass(_scope._composer.stack);\r\n        _scope._composer.toScreen();\r\n      } else if (_scope.render) renderer.render(scene, cameraNative);\r\n\r\n      _scope._execLoops();\r\n\r\n      // End helper.\r\n      if (_scope._stats) _scope._stats.end();\r\n    }\r\n\r\n    this._update = reDraw;\r\n\r\n    _scope._update();\r\n  }\r\n\r\n  /**\r\n   * Execute all loops with a specific time.\r\n   *\r\n   * @params {number} time - The time value that will be passed to loops.\r\n   */\r\n  _execLoops() {\r\n    for (let i = 0; i < this.loops.length; i++) {\r\n      const e = this.loops[i];\r\n      if (e.enabled) e.execute(e.clock);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update controls time values.\r\n   */\r\n  _updateControls() {\r\n    this.controls.update(Date.now() - this.time);\r\n    this.time = Date.now();\r\n  }\r\n\r\n  /**\r\n   * Update morphs animations.\r\n   *\r\n   * @params {THREE.Clock} clock - The clock object, which.\r\n   */\r\n  _process(delta) {\r\n    for (let i = 0; i < this.children.length; i++)\r\n      if (this.children[i]._type === 'morph') this.children[i].getNative().mixer.update(delta);\r\n  }\r\n\r\n  /**\r\n   * This functon will scene properties when it's called.\r\n   */\r\n  setSize(width = 1, height = 1) {\r\n    this.getCamera().getNative().aspect = width / height;\r\n    this.getCamera().getNative().updateProjectionMatrix();\r\n\r\n    this.getRenderer().setSize(\r\n      Number(width * this.getParams().rWidth).toFixed(),\r\n      Number(height * this.getParams().rHeight).toFixed()\r\n    );\r\n  }\r\n\r\n  setScene(scene, import_three = true) {\r\n    this.scene = scene;\r\n\r\n    if (import_three) {\r\n      this.children = [];\r\n\r\n      const moveChildren = (object) => {\r\n        for (let i = 0, max = object.children.length; i < max; i++) {\r\n          const obj3D = object.children[i];\r\n          let WHSobj;\r\n\r\n          if (obj3D instanceof THREE.Light) WHSobj = new Light(obj3D);\r\n          else WHSobj = new Shape(obj3D);\r\n\r\n          WHSobj.addTo(this);\r\n\r\n          if (obj3D.children.length) moveChildren(obj3D, WHSobj);\r\n        }\r\n      }\r\n\r\n      moveChildren(scene, this);\r\n    }\r\n\r\n    return this.scene;\r\n  }\r\n\r\n  getScene() {\r\n    return this.scene;\r\n  }\r\n\r\n  setRenderer(renderer) {\r\n    this.renderer = renderer;\r\n    return this.renderer;\r\n  }\r\n\r\n  getRenderer() {\r\n    return this.renderer;\r\n  }\r\n\r\n  setControls(controls) {\r\n    const recieved = controls(this);\r\n\r\n    this.controls = recieved instanceof Array ? recieved[0] : recieved;\r\n\r\n    if (\r\n      recieved instanceof Array\r\n      && typeof recieved[1] === 'function'\r\n    ) recieved[1](this);\r\n\r\n    return this.controls;\r\n  }\r\n\r\n  /**\r\n   * Set a camera for rendering world.\r\n   *\r\n   * @params {WHS.Camera} camera - The camera to be rendered.\r\n   */\r\n  setCamera(camera) {\r\n    if (camera instanceof Camera)\r\n      this.camera = camera;\r\n    else\r\n      console.error('@WHS.World: camera in not an instance of WHS.Camera.');\r\n  }\r\n\r\n  getCamera() {\r\n    return this.camera;\r\n  }\r\n\r\n  /**\r\n   * Remove this shape from world.\r\n   *\r\n   * @return {WHS.Shape} - this.\r\n   */\r\n  remove(source) {\r\n    this.getScene().remove(source.getNative());\r\n\r\n    this.children.splice(this.children.indexOf(source), 1);\r\n    source.parent = null;\r\n\r\n    source.emit('remove');\r\n\r\n    if (WHS.debug) {\r\n      console.debug(\r\n        `@WHS.Shape: Shape ${source._type} was removed from world`,\r\n        [source]\r\n      );\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nexport {\r\n  World\r\n};\r\n\r\n"]}