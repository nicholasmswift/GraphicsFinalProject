{"version":3,"sources":["meshes/Plane.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;IAAY,K;;AACZ;;AAEA;;AACA;;;;;;IAEM,K;;;AACJ,mBAAyB;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,uGACjB,MADiB,EACT,OADS;;AAGvB,qBAAO,OAAO,QAAd,EAAwB;AACtB,aAAO,EADe;AAEtB,cAAQ,EAFc;AAGtB,iBAAW,EAHW;AAItB,iBAAW;AAJW,KAAxB;;AAOA,QAAI,OAAO,KAAX,EAAkB;AAChB,YAAK,KAAL,CAAW,MAAX;AACA;AACD;AAbsB;AAcxB;;;;4BAEkB;AAAA;;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACjB,UAAM,WAAW,uBAAa,OAAO,QAApB,CAAjB;;AAEA,UAAI,aAAJ;;AAEA,UAAI,KAAK,OAAL,IAAgB,KAAK,SAAL,GAAiB,QAArC,EAA+C,wBAA/C,KACK,IAAI,KAAK,OAAT,EAAkB,wBAAlB,KACA,OAAO,MAAM,IAAb;;AAEL,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAa;AAC9B,eAAK,SAAL,CAAe,IAAI,IAAJ,CACb,OAAK,aAAL,CAAmB,MAAnB,CADa,EAEb,QAFa,EAGb,OAAK,SAAL,EAHa,CAAf;;AAMA;AACD,OARM,CAAP;AASD;;;oCAE0B;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACzB,UAAM,aAAa,OAAO,MAAP,IAAiB,OAAO,QAAxB,GAAmC,MAAM,mBAAzC,GAA+D,MAAM,aAAxF;;AAEA,UAAM,WAAW,IAAI,UAAJ,CACf,OAAO,QAAP,CAAgB,KADD,EAEf,OAAO,QAAP,CAAgB,MAFD,EAGf,OAAO,QAAP,CAAgB,SAHD,EAIf,OAAO,QAAP,CAAgB,SAJD,CAAjB;;AAOA,UAAI,OAAO,QAAX,EAAqB,KAAK,wBAAL,CAA8B,QAA9B;;AAErB,aAAO,QAAP;AACD;;;4BA0BO;AACN,aAAO,IAAI,KAAJ,CAAU,EAAC,OAAO,KAAR,EAAV,EAA0B,IAA1B,CAA+B,IAA/B,CAAP;AACD;;;sBA1BW,G,EAAK;AACf,WAAK,OAAL,CAAa,QAAb,GAAwB,KAAK,aAAL,CAAmB,KAAK,YAAL,CAAkB,EAAC,UAAU,EAAC,OAAO,GAAR,EAAX,EAAlB,CAAnB,CAAxB;AACD,K;wBAEa;AACZ,aAAO,KAAK,OAAL,CAAa,QAAb,CAAsB,UAAtB,CAAiC,KAAxC;AACD;;;sBAEY,G,EAAK;AAChB,WAAK,OAAL,CAAa,QAAb,GAAwB,KAAK,aAAL,CAAmB,KAAK,YAAL,CAAkB,EAAC,UAAU,EAAC,QAAQ,GAAT,EAAX,EAAlB,CAAnB,CAAxB;AACD,K;wBAEc;AACb,aAAO,KAAK,OAAL,CAAa,QAAb,CAAsB,UAAtB,CAAiC,MAAxC;AACD;;;sBAEc,G,EAAK;AAClB,WAAK,OAAL,CAAa,QAAb,GAAwB,KAAK,aAAL,CAAmB,KAAK,YAAL,CAAkB,EAAC,UAAU,EAAC,UAAU,GAAX,EAAX,EAAlB,CAAnB,CAAxB;AACD,K;wBAEgB;AACf,aAAO,KAAK,OAAL,CAAa,QAAb,CAAsB,UAAtB,CAAiC,QAAxC;AACD;;;;;QAQD,K,GAAA,K","file":"Plane.js","sourcesContent":["import * as THREE from 'three';\r\nimport {PlaneMesh, ClothMesh} from '../physics/index.js';\r\n\r\nimport {Shape} from '../core/Shape';\r\nimport {extend, loadMaterial} from '../extras/api';\r\n\r\nclass Plane extends Shape {\r\n  constructor(params = {}) {\r\n    super(params, 'plane');\r\n\r\n    extend(params.geometry, {\r\n      width: 10,\r\n      height: 10,\r\n      wSegments: 32,\r\n      hSegments: 32\r\n    });\r\n\r\n    if (params.build) {\r\n      this.build(params);\r\n      super.wrap();\r\n    }\r\n  }\r\n\r\n  build(params = {}) {\r\n    const material = loadMaterial(params.material);\r\n\r\n    let Mesh;\r\n\r\n    if (this.physics && this.getParams().softbody) Mesh = ClothMesh;\r\n    else if (this.physics) Mesh = PlaneMesh;\r\n    else Mesh = THREE.Mesh;\r\n\r\n    return new Promise((resolve) => {\r\n      this.setNative(new Mesh(\r\n        this.buildGeometry(params),\r\n        material,\r\n        this.getParams()\r\n      ));\r\n\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  buildGeometry(params = {}) {\r\n    const GConstruct = params.buffer || params.softbody ? THREE.PlaneBufferGeometry : THREE.PlaneGeometry;\r\n\r\n    const geometry = new GConstruct(\r\n      params.geometry.width,\r\n      params.geometry.height,\r\n      params.geometry.wSegments,\r\n      params.geometry.hSegments\r\n    );\r\n\r\n    if (params.softbody) this.proccessSoftbodyGeometry(geometry);\r\n\r\n    return geometry;\r\n  }\r\n\r\n  set G_width(val) {\r\n    this._native.geometry = this.buildGeometry(this.updateParams({geometry: {width: val}}));\r\n  }\r\n\r\n  get G_width() {\r\n    return this._native.geometry.parameters.width;\r\n  }\r\n\r\n  set G_height(val) {\r\n    this._native.geometry = this.buildGeometry(this.updateParams({geometry: {height: val}}));\r\n  }\r\n\r\n  get G_height() {\r\n    return this._native.geometry.parameters.height;\r\n  }\r\n\r\n  set G_segments(val) {\r\n    this._native.geometry = this.buildGeometry(this.updateParams({geometry: {segments: val}}));\r\n  }\r\n\r\n  get G_segments() {\r\n    return this._native.geometry.parameters.segments;\r\n  }\r\n\r\n  clone() {\r\n    return new Plane({build: false}).copy(this);\r\n  }\r\n}\r\n\r\nexport {\r\n  Plane\r\n};\r\n"]}